sorry can I move it a bit so it would go pretty quickly So you, I mean the DAF, DAF 3, you're still broadly solving the problem of events, right? The problem of events getting passed. So one solution is that we mentioned is, you open a page to correct the event occurrences, right? But it has a lesser needs for your sign that you will go with message buttons. And the goal of message drive is to help. So can you tell me what, what does a resolution look like for a trusted friend? What does a resolution look like? So can you, can you, can you, can you, can you walk me through an incident? Like, what kind of incident can you have? So one of the incidents could be that there was, there's a marketing campaign that's going on related to a particular product. And when we end up sending that email, the observation is that 5% of the emails were not getting sent. Mainly through Yahoo, let's, let's suppose all the Yahoo email Yahoo, mail receivers were not getting 5% sorry the emails. So, so now it is about 5% of the users who are using Yahoo, but not getting their results. Yeah, yeah. This is a point to get that audience. How did you identify the detectors? So, so the way we are, how, how do we raise the specific? So we have metrics. So metrics is where things start. Oh, I didn't mention. Okay. Got it. I didn't mention that section in this interview. So we have metrics on New Relic. And in case there are any emails getting bounced, we have SES metrics over there. We can we can see that if there's a spike in the number of emails that got bounced or the error rate. The first thing someone would like before the production support team who takes care of any issues that come up come up in production, they would end up looking at the logs related to that or any sentry errors that we have related to it. And once they go through the sentry errors and the logs are related to the that particular error. In case it's something that's solvable at the end, they would solve it. Like for example, they have a campaign that was not correctly sent. So if there's anything that's solvable at the end, they would end up doing it. In case it's needs an escalation, they would call and develop devs into a meeting and then. Sentry has a lot of logs. It shows that suddenly it starts showing that many emails to young who will use those things. But they're really an incident that is created. But is this incident resolution process improvement? So this is a alert resolution. What are you trying to improve? Well, the better. If you go all the way down. Time from 11 to 1st action down from 37% to 70% what are you referring to? An incident or a reference to only alerts. There's a difference between an incident and a alert. There's something that you can write over sentry, splurge or any other data tool that knows something is going on. Your performance has been upgraded. You are a lab liquid and you'll get an alert. But not every alert, it's an incident. So when you say incident, it is something that could not be resolved and. Incidentally, that might be an outage turning of the situation. Something serious. But this is not an outage situation because it's marketing emails are not going with. Yeah, yeah. This is not an incident. I mean with the definition that you mentioned. So you get a lot of alerts about so many failures and everyone has to work through those alerts one by one. And it takes time for the support team to resolve the alerts. How do you track these alerts? So the email alerts, what kind of alerts are supportive numbers? So the emails that we end up getting are mostly related to, the alerts that we end up getting are mostly related to emails being sent either through campaigns or there are questions. Where do you get these alerts? Like on emails on slide. So we have an integration of a century into our projects. So the code that ends up sending the emails that is being monitored by a century and any issue that gets popped there would be sent to a century and we have a rule that sends that particular incident, sorry, alert to our Slack channels. So you get an alert, you know, Slack. And how do you track the workflow of an alert? When the alert came in, alert what why? You resolved like how did you know that it was taking 27 minutes to resolve alerts on an app. So when is an alert marked as resolved? So this time this duration is not for the ticket being resolved. This is for no tickets. Sorry, sorry. Sorry. If it is in the middle of the month. Yeah, yeah, an alert came in and then the next process is production support team or the ones who also have access. So we sent all these to a particular Slack channel and backend developers, friend and developers and production support team all have access to that Slack channel. And the first thing is we is production team checks the error. They categorize the CVRT which team is responsible to solve it. So all that segregation is something production support team does. And once they have identified the issue in case they are able to solve by their own, they end up doing it. But in case some it's. When if you ask this question that this alert will happen at 4pm, yes, we did. How do you know that it took 27 minutes to resolve the alert? Where do you keep? How did you come up with this? Okay. How do you track? If an incident started at 4pm, at 4pm, at 4pm, it was all minutes. So no, then it is it took 27 minutes. Or the other way it started, an alert came because males were feeling and that showed up in the century that the success email campaigns have done, has gone viral or certain petrol. And then it came up that petrol and it got resolved. Right? So, yeah. So there is an I'm asking you to ask this because they will try to create you, are you going to try to solve the right problem? Okay. What is your goal if you are getting a lot of alerts? Like how many alerts are you getting? Each. If you are getting like 100,000 alerts, a lot of alerts you need to figure out how to reduce the number of products. Right? If you are getting let's say, 20 alerts in a day. And that's a different story. 10 alerts in a day, different story. One alert in a day, nothing really matters. So my question is like, what is the definition of an alert being triggered and what is the definition of alert being resolved and how long does it last? Okay. So as I mentioned, the alert gets sent out to a Slack channel. The production team goes through the alert, checks the logs and and the first thing they do is they create a geraticate and assign it to themselves. And then they document all the details related to that alert in the geraticate. Wait, wait, wait, that's such a far from how many alerts do you get on the geraticate? So how many alerts do we get on a daily basis, right? Yep. We get around 50 alerts on a daily basis. So are you telling me that we will raise 50 geraticates per hour? So not all alerts are needed, not all alerts need geraticates. Some can be resolved or some can be some don't need escalation as such. So that's the reason like out of 50, 50 to 20 tickets is where we end up creating geraticates for. What is the criteria for creating a geraticate? Anything that takes more than 15 minutes to solve is where we, so the criteria, I mean the main criteria that I can think about is the time to solve in case it's something that is fixable. So very quick. This 27 minutes does include the ones which created the geraticate or does not did not create. There's only for the ones that which have geraticates created. It is only for the ones that geratic is created. The tool is basically for developers and not for support engineers. But support engineers are working on those for 15 minutes. They get out what happened. Shouldn't you be providing that information to them so that they can try and so what I'm trying to tell you is shouldn't you, one of your correcting year we, like supporting this is then you will need to create a ticket. They could resolve the issue by making the networks, I asked you this tool to question, get any answer and then fix and get MCP a bit more. But now you have to create the geraticate. So the number of geraticates reduced to the left. Again it is your story and not the ones who will try to say that or this is wrong or this is like all I've wanted is that the story should be a tie. Wherever you are improvising you can't make mistakes. Because if it comes to that these kind of questions, they are like make mistakes especially if a person who is among interviewing you is a manager or a CEO manager their focus would be on the tricks. The first question would be down by 27% or 33%. The point is you have a central tool and a support tool. Support tool will get you in that level in a support channel. They will start working, they will get paid for these tickets and they will start on monitoring or trying to get this ticket. Not the tickets are in an alert. Now in general the alert is sometimes alert is triggered and they are not always on. Why they are not in the zone? They are not in the zone because when you say auto-resolve is it does it mean what I can think about is maybe there is a crown running and the next run would probably take care of it. Look at the central tools. Central tools must be showing something that can be done. The number of emails, the number of jobs that run but the number of emails are in the zone. If one of the jobs is failing in a certain task being able to deliver you and to a particular set of users that come early or a particular domain and alert to pop up and go into the slot. That is when you start to pick a downed domain. Your support is in a shorter pot pitched. Yes, there is an alert after that time. Like what is going on? It doesn't necessarily have a downed domain to consider but your support is in a minor fit page for this. And they will start investigating the alert. An alert will always be linked to a particular job. There could be multiple alerts for the same job and each email that is being sent could have a new alert but your sentry has this thing which can club all the similar errors into one. So that way. So let me ask you this question. Every time the alert is generated let's say even when not spying the calls of a temporary glitch in the system and then the job or governance started sending that. Okay. Will that alert order result? Do you have that kind of system? I don't think sentry does that if we have to manually market result. Sentry does that. Like sentry. So I don't know what kind of tool sentrys would have never used it. I was recently started using it and it's funny. But if there is a number that gets in every hand. Rapping those alerts in a different way then getting in that. One thing is that let's say let's give you an example of a tool that I've been splunged to by start part of the law. Which one? Splung can also splung. Splung. Okay. Splung. Splung. Okay, Splung. Splung. Yeah. Yeah. So Splung can blend the reads through the laws you can also create a alert for Splung. Whenever there's an x number of errors coming in this much time, it really gets a lot. How does a alert system work? You have said that if my performance T95, you browse below two seconds, goes about two seconds, generator. Okay. It will generate an alert and send you on the slack sample or a little bit. Okay. Yeah. No one looked at it. Nothing happened. Five minutes later, it automatically got resolved. The P95 was a temporary V100 prefix. And at that point, let's think auto result. Like, okay, this is no longer that case. Now my question to me is, do you actually track ways of learning? Does it each alert that is created need to be closed? To my knowledge. So, if I, I mean, I can actually, you can look at alerts. I can't say anything. Yeah. So, in case I, so this is an alert. Okay. So, there is actually each alert has to be worked on. Yeah. So, these alerts, like for example, if I go to all projects and pick up project that. This is your same. Yeah. This is our century. So, I'm just trying to see in case I can, so there are a lot of projects that I'm going to do. Can you go to the alerts? Just like I want to see your alerts essentially. So, these are the issues. So, the issues. So, the way I create an alert over here is like, for example, this is going to the slack sample. Oh, slack sample. I have a device in the alert. Okay. I, this is a, this is personal app. So, I don't have. Yeah. Just go to, um, I can show you, like, I can take a screenshot. Oh, you don't even need to speak, Laura. Just, um, click on the alert that you bought and you should see a lot of page, I think. This is this, which centuries this, is this your personal, but your office century? Yeah, yeah, yeah. Okay, you can use it. Okay. So, okay, I just want to open this alert stage. Very nice. Yeah, I'll open this. No issues from in 14 days. Yeah. Let's say, for example, this is a, this is an issue. This has been occurring. This is a, um, we're not, this project is no longer active. So, I think that's the reason it's throwing a lot of errors. So, all these events, each event is a user error. There's an API called that is being made. And it's throwing all these events of the same error type. And here this resolve is something I should click on manually to mark this as, hey, this is resolved. So, that's what I was saying when I was mentioning, okay, I need to mark it manually and there's nothing like an auto resolve thing. Okay. So, I'm surprised, or the other looking, there's an error that can be, and someone has to go and work on it, and resolve it. Yeah. And instead of page, I can see all the active events, or I can see what the other part comes in. Projects. So, if I, so the way, I mean, this is a screenshot of my Slack channel. This, I've just transferred one screenshot over. Let me, okay, I think I need to share, uh, share, share one with screen. And then, let's just, So, this is so this is how we get errors in the slaxion. So, this is related to a project and if I click this it will directly take me to that particular So, you basically sent me technically give you an opportunity to either assign an alert to someone on the long run. Yeah, yeah. So, I have just copied. So, that's right. Now I got it. So, you know got the each list. So, go back to your doctor. Do I have to think about it? Do they assign these alerts to developers? No. These alerts are always with the support engineers. Yeah, yeah. They are with support engineers and in case they can resolve the issue and market resolve it's well and good. Yeah. So, who is using this to 120 one leaves who are these support engineers or developers? Both. No, they cannot be both. Because if they are both you are 27 minute to 17 minute metric is in there. Because you say that 15 minutes and beyond the alert goes to developers. The data is directly sent it to a developer. And you are only measuring those topics. And just I'm just thinking is I mean instead of 15 minutes it could be that an issue is not issue may take more than 15 minutes but it's an easy issue to resolve. So, even those kind of issues. So, basically each of them is everything. Why on which it is, it is basically when they developers all the zealot you guys. It measures all the alerts that have come. So, what engineers are getting paid for the alert? They become the alert and try to investigate it. They use you to find a trial and empty answer. What? They are. And your next step should be like integrated within the slats and that whenever a alert comes your bot starts all the quanta alerts. And provide a summary that an alert can with your list. This is it. This is it. But on now like my first concern is trying to alert to first action down. So, if you think about it, the time from alert to first action what is first action? Okay. First action is the resolution part of things. Like, okay we have identified what the issue is. Now let me work on the issue. So, yeah I mean even here am I creating the zealot in the first action or before the first action? I don't think that matters. The idea is time for average time for alert resolution reduced from 27 minutes to 70 minutes. Blanket statement. Okay. We have a blind date. And then that there are some tail ends to it. For example, some alerts are not easy to resolve and require report change. We do not use those any dismissive. These are only the alerts that support team was able to resolve or had got escalated to the depth team. So, the depth team was able to resolve it by identifying the issues in details and making changes in the DB or without having to actually make a report. Because course team will take a lot of that and it would score your metric. Okay. Okay. So, that is one part. Second, another metric to mention is number of stations that went to the depth team. Answer this tool. It is basically a developer sitting in health and support incidents. A virtual AI based developer that is helping with all that knowledge. Correct? So, the local basic relations and legal information should also be reduced. And that could be your second metric. So, what do you mean is this tool is like an assistant developer and it is... Here assistant for support incidents. Yes. And it is helping reduce the number of tickets that are being created for the developers as well. For the developers, right? At the end of the day. No, and as many developers they are not using. If a support, if a ticket is escalated to developers, even developers would like to identify with... Yeah. But it is exactly the required support scene or not. In fact, the support scene is identity. Why do people not measure anything or the outcome? Because that is true of your metric. Even in this case, you mean like... No, no, no. I mean. Okay. This is where the developers are getting the issue and needs resolution. Correct. Now developers resolution can be up to one. Something that is about team overload and could not be done at all. It is buying up to the development developers. And developers are even to identify that this scene needs to be done without actually meeting a court scene. And there is all the etiquette. The other thing is... Developers say that of the disc leads the courts. And if developers say that it is a court scene, you are basically saying that... I am not measuring the resolution time for that. Reconormous. That will take that my dick when it goes on. That will be an architectural gap that needs to be addressed in life. Got it. It's leaks. So you can have the vision. See, in your head, your story should be in Oxford. Is all that? Yeah, I think that makes it. For court scene types, we are not including the... In most cases it will not be something that they even fear about. They don't have to proactively. But it will come and see if you know how to do that. It makes sense? Yeah. Okay. So I think... I mean... It's more of trying to explain what this minutes is about. Like... What are... What are... What are the durations of including in this? One being... Anytime that's been taken by the... Production support engineer. And I feel... There's another question that you asked, like, how are we measuring 27 minutes or 17 minutes? That I feel could be done using... When was the century error race and when was it marked resolved? Absolutely. That's the final but the problem is... Even not marked with a century error resolved. That is also not. If you say that creating a ticket to the dirty means century error has been resolved. That is that your work flow or not? I don't think that's how it's supposed to be. That is... If you think that is not how it is supposed to, then it is not. But then... Marking meters and it is all and... Mainly that there's a portion required. And it is something that you will clarify that I don't measure. Okay. If those alerts, we have to pick up. Okay. In measuring this 27 minutes and 17 minutes. It's said to... God. If you're able to... I think it's... Explain the work flow of the anode. And here's case. It's... As case is when it... I don't know that cannot be solved. Because there is a good thing. There's an arcade actual gap or whatever. Those things should be dealt with. And what stops you from assigning an alert to a developer? You can assign a alert to a developer. And the developer can continue working on it. And GRI certificate is only created when you... A fix is identified, that requires it. Hmm. Right? You won't say anymore something. God. Excellent. Now, adoption to proximity work that he uses, these are all developers. And support engineers. But do you have like 120 users? Why haven't they developed it somewhere? Only this fun email jobs. I think... Number of users is... A bit too much for emails. Just for emails is what I think it is. Correct. That was my point. Yeah. But you need to say that correct you only 16, but you need to support your members that you get along with the developers. But we are trying to expand what is stopping you from using this Internet of logs. Same... A different set of run looks to identify any support needs. But then they ask why did you pick up email as a problem? Then you should send a 90% or 70% of the support you get that you've got getting. But regarding this. 30% of the alerts are coming because of emails. And I've got to be getting other guy who's supporting it. Yeah. This is something that is high number. That is why you picked up this solution. And then experiment. Now that it is successful, you want to further enhance the knowledge base by adding the runbooks for another technical incidents to your grounding data. But I feel... Maybe this is like an implementation question. So the existing structure has all these... Like it has a S3 bucket. It has some knowledge bases like SES, CloudWatch logs. It's getting data from. I think the whole architecture or the whole resource needs to get replicated for another use case. We cannot cross utilize because the data will get mixed. To buy a... It is at the end of the day talking about your set of operations. Oh, okay. Your support team only has a set of operations like your services. If your service only is a service or do you do other things as well? I mean, event... In the future, in general, they do all the things. Email is what we've started using this for. And to your point, like... The Athena that we would use as a data source for searching all the metrics that were aggregated using all the data resources. We would have different tables for each and every type of data. For emails, we'll have a couple of tables. Yes, so for now, you can say that... How are your... Your standards? Yes, yes. So, the meaning of the word is... Select the formations set up and you are trying to explain what your data is. So, in that we are explaining the name of the data. Our set... Like the problem that we intend to resolve is... Like, we... Have this problem where our support team is getting a lot of tickets and it is taking too long. The resolution time is taking long. A lot of those tickets are getting escalated to each other first. And the other part is spending a lot of time in resolving those tickets instead of doing the other functionality on each of our options. That was the problem where you started. Then after identifying what kind of alerts you are getting, you realize that 70% of the pizza alerts were due to the email fingers. They are critical to the content. So, you cannot just let them go despite the fact that they are about to unmark, cannot tell, not keep paying it to the kind of events. These are particular alerts and that is why we have identified that as a list. 70% of them were because of that. So, we picked up this use case and we did a group of 1-7. We did a third. We created a third node that could help them resolve their tickets. Because we noticed that many of the resolutions after doing a historical analysis of the tickets, that means the resolution that actually is needed. So, the knowledge already exists. I can't find it searching for that information. This is the solution for this kind of an alert. I was staying in that head of one particular support, the individual. Or it is by for a ticket and we have to escalate it to the developer person and then it will solve. The idea was that the value of the information is available. It is a lot of documents to do through. And it is to identify the things and it takes a long time. And sometimes support the thing is not even able to fund it. They end up escalating it to the developers. Yeah. And some cases, they could be some context information. They need to go through as well. So, that, we first targeted those 70% of alerts to improve the overall efficiency of the supporting. And that is how we decided on doing this. Very limited set of data for aniloks and a bunch of logs were actually. Now, we are going to the in-order group. Allow for an easy search to quick English based access for the support engineers. Okay. Right. And once now that we have seen that it has been established, there is actually it is very useful for the support engineers. And they are like, so instead of first of all, of 640 questions, remove it to 640, say 640 queries per week. 640 queries for instead of 120 units, since about 16 support engineers, they are having engineering managers and 60, not 60. Okay. Now, that you have been able to solve the biggest problem with the PLC. Nothing stops you from grounding the rest of the run-alongs and allow your support engineering team to use this tool for different time-lock alerts. They did. Or incident-step data. Okay. They did. So, that is how you would have done that. And, okay. And the flow to feedback is something that I should talk about. Yes. Yes. Yes. Yes. Yes. Yes. Yes. Yes. Yes. Yes. Yes. And then I will bring a citation, people may end up giving plus fun, negative response to that. And based on that, we have one data citation working in that, we have a basis. This is responses. And we come back to our model in order to make sure that we get more of the answers that uses the dot 5 you are supposed, which means, which sort of indicates that there is an improvement in the documentation or the governing data. So, we will work on that. Right now the process is mental, but at some point we would like to automate. But the words the modern movementy demos are in, but basically this is all you have to respond. Your response to slightly different from it, but you would not try to say that it would be completely collective. Because the questions like, what if you can't get it, it is not done here. It's probably. Our long did it take for you to solve this problem. Right. That would be one question. How long did it take to solve this problem and all what is it? Yeah. This problem only, the time lines that the people can't actually get it. Yeah. Yeah. Yeah. Whether, even here, we get it. So, we will go ahead and try and get it. Right. So, the time lines, number of people you worked with, how, who conceived the idea, who was it part of a hack test for all things, for the proof of concept. Now, at least we are not as a top-level type of it. And now we are doing it for the entire source code, for our support engine, but other support engine, so that the role knowledge is also suggested ideas. So, we are looking into the opportunity if we get funded and the entire knowledge base also to be available, can be seated or grounded. This is the point. Now, but the problem is we still need to identify, like which our document structure is not consistent. Right. Different things might have documents in different places. Those documents may be in different stages of cleanup, different stages of quality and whether they are up to date or not. All that need to be solved and that requires significant investment at this point. So, we will have to see if we will shift at least to that. There is definitely value, but we will have to see if we can get that. So, we can even use it for developers and other shindra roles in that. Right. That is how you need to start a new student. And then, like I said, I would be able to come up with all the technical answers. I mean, what is your confidence? So, when you do a body question and then you do this, so you would come prepared and then say, what will you do then? God. Or I guess, you are putting the value to move. Because the return is coming. If the price is not that high, then we will have to get it. God. But you know. I so, I want some actionable points that it can work with. So, currently, I mean, from this discussion, what I, my major takeaways, I don't have like a timeline or a story figured out, which is full proof in a way and have no reaction between. Yes. So, you have a technical context. I will not worry about technical context. Yes. So, I will give you a solution and then you will give the solution. And then you will give the solution. And then you will figure a set of words, all to even make the fix and then resolve the result in the same way. All that you can do. Not all that, not all that. I will give you a solution. So, future keeps coming. What is the main purpose and for technical? Technical to go away. From day one, I have a one-bedroom, you have difficulty understanding. Yeah. Basic architecture. So, I will speak in one. Basically, it's a three-time, I have a question. Okay. Yeah. I mean, I was actually working on understanding the architecture a lot, I was thinking, that's good. It was a really weird technical, mostly, that I don't know anything about it. But, other than that, I just also remember one thing. You are not really one who saw it in the store. You lead the solution from the store. But, you didn't saw that the end to end. Which means, I feel I don't know about that, that's all I know. Yeah. As an engineer, you think, I really don't know. I really saw that problem. Not by just writing a word. But, I bring in together a couple of people, in the service, my men and their product managers are at. First and foremost, why is it really bad? You project? How is it started? Oh, okay. I'm like, did you give any idea? Did you think about your idea? Hmm. Support engineers' problem is, who did you think? The developers think about it. They say, the person, the two men, they are developers. You have no idea. You project so much. When I started working on IPA, I was forced to use Connector or active on the IPA. We came up with this idea. And then you can say that this idea also won the access. Hmm. I think you know that. You can say that you are like, I think it's over to your product manager or trying to figure out what is taking that. And then you do one junior developer, that he, the boss, was the architect. You three are in the middle case, who could account productized. And then you build that group today. Okay. So can you tell us about the evil upon winning? I acted as a living, but I like my dream, I want to add to the new activities of making it more, where I focused on productizing or not. Okay. So what about you? You are just a method. But remember you didn't work on this alone. Yeah. I'll show you what you did with my friend. I'll be actually, you know, if you don't have time to run, or you don't just come up with that act, I already know that you know how it works. It's not just any other day, I get a blog, I know, I know, you know, I want to realize that. I'm trying to push it. Maybe you will be a senior. This is fine. Unless somebody maybe, I said, I have to. Hmm. So that part is fine. I think architecture is not going to be the problem. If you want to be a professor, I'll be interested in that. Okay. Except for the set of technologies you use, or the data you consider, if any. Hmm. By the way,owie, you picked up picked up certain technology, the aga model, you use, the idea for a quality of AI. Well, security. We started experimenting with that act, because it was the easiest and fastest to get started on. I mean, you are thinking, given you, and, you are actually, you know, it's a child-based model. Are you actionable model in the world? Yeah. Yeah. When I actually made it, I did it in the beginning. I would say, you know, I was trying to get the idea, but I figured out that the problem, the distribution, the solution, the solution, the solution, the steps, and I say, you know, you know, you are not going to be able to do that. Hmm. But the idea is, if you want to do it, then you can do it. Yes. You can do it. Yes. Yeah. Permissions. I think, I think, I missed one thing, that, like, I just, I just, I just, I just, I just, I just don't forget to talk about, it responds to the idea. It responds to the idea. Okay. That's the thing. The thing is, because, if you don't use those terms, there will no care, you know, technology is going to be good, even a few things are going on. Hmm. Okay. Okay. Yeah. Sorry. I'm going to. Okay. Yeah. So, I was, I was thinking, like, even, how would even, product engineers, um, use the centering information, like, do I also integrate centering information into the flow, in a way, uh, it's high, this is more technical question than, uh, uh, we're going to, uh, uh, uh, it's in a way that, you know, let's say, through the logs, and we're going to use it to, to, to, to cleanse the tools, to, to, to, to. So, what, what are, what are, what are, like, or we can easily get it. Yeah. You would have to get it in a separate way for you to get it. And you would have to do it for me. When you automate the operation, you would have to see that it is a man on the floor. You could have done it. You could have done it. The biggest difference that I see is AI can be used in such a way that it can be used. So, AI to jump up. If AI can... If you can use an efficient process and do something on it. And if AI can be used in a reset process, you would have to do it. Because it is an efficient process. I think that... I am going to say that it is an edit sheet. CSP5. It has a door to door. It has a value in which you can choose a call-up value. Then you can update the call-up value. Okay. This is what happens. You can tell it to a lower level. It is said that this is a very spreadsheet. This spreadsheet measures that my sales is so much in the city. My... From each and every city, I am going to do a little bit more. So, you can correct the data. And this is an edit. So, you have to tell it to the other way. And then you can add a call-up value to it. And you can do it. That is the next step. You have to do a higher level edit. You can do it. Instead of a lower level, you can choose. Yes. The question is, what do you need to do? Not how? Instead of it. How are the points? What are the features? How is something it will figure out based on the data? It is an edit. What? Okay. So, it is an edit. Okay. So, it is an edit. You can call it an edit. It is an edit. Okay. It also proposes how part of things are there. Of course. You don't have to do that. You don't have to do that. You have to tell it to the steps. You don't have to do it very much. Instead of setting it. Okay. Got it. I am going to call it an edit. But, I have just realized that, like I have made an interview prep, which is a filtered version of the main dog. So, based on this, you are mostly prepared here. I do come up with some random questions and think about how do I answer them. Or, like, should I go about say, I will remember the entire presentation of 10 minutes. First, let me tell you about the random questions that he had, the interviewer, anyways, like, directly. Sir, dial with the power. Okay. I am once a guest, you to go ahead and show you a document. Okay. Okay. Just talk about it. It is a document for you. 100% accurate state and a deep concern. How do you get it? You can get it from the question of the interview. Get support. On Eką, have you read any of the comments that have been sent? Yes. Come, sir. In cleaned areas are theHello ком not there. Then, get the links for the case, sometimes from grateful. Or you can then have, your email, that's okay neither i should track i am so happy that contact you life don't you visited at this days What are the points for the session? We need to bring in the structure of the brain. So we have to do this because we are focused on one end of the day. Okay. Second possibility is that if I am finally ready to do the sessions, I can try to report to the group. Okay. I don't know if the body of the body is in the summary, but I will be able to do the details in the notes. Okay. If I have a premium, I will have to see it. It will allow me to record the session. Yes. I will have to record the session. Do you have any requests for the session? I have also voiced. Last session, I was recording it on my phone. But then someone called. I thought it would be recorded, but it stopped. So I have discussed in the last session, which is the important point. I like the word in the last session. I have to record the session. I am recording it on my phone. I am trying to do it on my phone. I will try to find the zoom also. Okay. I will see if Google meets something similar because I have premium. Next meeting, I will try to use another platform where I can record things. Okay. All right. Take care. I will see you on my phone. I will see you on my phone. Any other action points that you want me to work on? I have a very good speed. I will see you on my phone. I will see you on my phone. I will get the next time you meet. I will see you on my phone. Okay. No, I will not do that. Yes, sure. Thanks. Thanks, Dhru. Have a good day. Bye. Bye. Bye. Bye. Bye. Bye. Bye.
                        're                                                                                                                                     ˈɛs    ˈɛs                                    ˈɛs  ˈɛs                                                                                              't         't                                        ˈɛs                                                                                    ˈɛs  ˈɛs                           ˈɛs  ˈɛs               ˈɛs                                           're                                                                       ˈɛs          ˈɛs                                  'll          ˈɛs                                           ˈɛs                                                                                                                                                                                                                                                                                                                                                                                                                     ˈɛs                                                                                                                                              ʌm                                                                                   ˈɛs          ˈɛs                                                                                                                          ˈɛs                                                                             't       ˈɛs                                                                ˈɛs                            ˈɛs                                                   't                ʌm      't                                                                                                 've                't                                                                                                                                                                                                                                                                                                          't                                                                                              ˈɛs                                          't                      't                    ˈɛs                               ˈɛs  ˈɛs         've                                                        ˈɛs                                                                                                     ˈɛs                                                                  't                                                                      ʌm                  ʌm                                                                                       't                           't                                                                                  'll             ˈɛs                          're              ˈɛs   ˈɛs                    ˈɛs          ˈɛs                                   ˈɛs                   ˈɛs            ʌm        ˈɛs                                                                        've                               ˈɛs                                                                           ˈɛs                                                                        ˈɛs                                                                                     ʌm                          ˈɛs                                                                                                                                                                                                                              'tˈɛs                                                               't                                      ˈɛs                                         ˈɛs                  ˈɛs                                            ˈɛs                                                   't  ˈɛs  ˈɛs                                            ˈɛs               't                          ˈɛs         're        ˈɛs             ˈɛs   ˈɛs             't              ˈɛs                                                                      't                                     't                                                                                                                                           've                    've       ˈɛs                                                                                                ˈɛs                                                                                                               've                                                       'll                                                                                                                                                                                                                                                                                                                                          'tt          ˈɛs                                                  't                                                                                                                                                                                                                                                                                                                                                                                                                                  't                                                                                                                                                                      ˈɛs                                 ˈɛs              't                                          't              't     ˈɛs                't                                                              ʌm                                                                                                                    ˈɛs                                                                                                                     't        'll          'll         't        't                  ˈɛs                           ʌm                                                       'll                                                                                                   ˈɛs                                                                                                                                                            't                    ˈɛs            't                                      ʌm                                                     ˈɛs              're          ˈɛs         ˈɛs        're                                                                                                                                                                                                                                                                                                                                                                                                                                                                           't       't                't                                                                                                                                                                                                                                                       ˈɛs              't                                                                      't                                                                                                                                                                                                                                                                                                                
